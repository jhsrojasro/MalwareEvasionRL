import gym
import malware_rl
import sys
import numpy as np
import pickle
sys.path.append("..")
from RL.DQN.dqn import DQNAgentMalwareEvasion
from RL.utils.graphs import plot_metrics_malware, plot_metrics

training_steps = 1000
test_episodes = 10

environments = [ "malconv-train-v0", "ember-train-v0"]

env = gym.make(environments[1])

agent = DQNAgentMalwareEvasion(env, nn_hidden_units=64, epsilon_decay=True, checkpoint_path="models/dqn_ember_v0.pt")

metrics = agent.train(
    training_steps, 
    start_step=32, 
    frozen_target_delay=50, 
    learning_rate=5e-4, 
    initial_epsilon=1, 
    final_epsilon=0.01, 
    print_delay=1,
    load_model=False
    )
# print("Metrics: ", metrics)

fig = plot_metrics(metrics)
fig.savefig(f"plots/dqn_ember_{training_steps}_steps.png")
n_evasions, evasions_data = agent.test(test_episodes)
pickle.dump( evasions_data, open( f"data/evaded/ember/dqn_ember_{training_steps}_steps.p", "wb" ) )
pickle.dump( agent, open( f"models/dqn_ember_{training_steps}_steps.p", "wb" ))
print(metrics)
print(evasions_data)
