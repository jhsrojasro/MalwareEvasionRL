!This program cannot be run in DOS mode.
.text
`.rsrc
@.reloc
*nsb
,;(d
,!(d
%	oL
*zr-
.@(`
+v~W
+$ro
p*rw
*Vsm
*.s{
BSJB
v4.0.30319
#Strings
#GUID
#Blob
<MidnightUpdate>b__10_0
<>c__DisplayClass0_0
<OnPowerChange>b__14_0
<.ctor>b__4_0
<.ctor>b__6_0
<>c__DisplayClass9_0
<UpdateMenuCurrentImage>b__0
<Do>b__0
<Get>d__0
<>p__0
<.ctor>b__6_1
<filePath>5__1
<channel>5__1
<>u__1
Func`1
Nullable`1
IEnumerable`1
CallSite`1
Task`1
AsyncTaskMethodBuilder`1
TaskAwaiter`1
List`1
<>7__wrap1
Microsoft.Win32
Int32
_VtblGap1_2
<.ctor>b__6_2
<wallpaper>5__2
<GetChannels>d__2
<>u__2
Func`2
KeyValuePair`2
IWshShell2
<>9__6_3
<.ctor>b__6_3
<GetWallpaper>d__3
<SubmitEvent>d__3
<>u__3
Func`3
IWshShell3
_VtblGap1_4
<>9__6_4
<.ctor>b__6_4
<SubmitEvent>d__4
<>o__15
_VtblGap2_5
_VtblGap3_5
<SubmitException>d__5
<SelectChannel>d__8
<Module>
GetTypeFromCLSID
GoogleAnalyticsTrackingID
monitorID
SPIF_SENDWININICHANGE
SPIF_UPDATEINIFILE
System.IO
SPI_GETDESKWALLPAPER
SPI_SETDESKWALLPAPER
value__
mscorlib
System.Collections.Generic
ReadAsStringAsync
DownloadFileTaskAsync
GetAsync
PostAsync
channelId
partnerId
wallpaperId
Thread
get_payload
set_payload
channelSubscribed
channelUnsubscribed
add_PowerModeChanged
appLaunched
set_Checked
get_LastChecked
set_LastChecked
get_Enabled
set_Enabled
appInstalled
wallpaperSourceTapped
channelCreateTapped
wallpaperShared
AwaitUnsafeOnCompleted
get_IsCompleted
Synchronized
get_id
set_id
NewGuid
<payload>k__BackingField
<id>k__BackingField
<image>k__BackingField
<title>k__BackingField
<channel>k__BackingField
<sourceUrl>k__BackingField
<url>k__BackingField
<o>k__BackingField
<partner>k__BackingField
<success>k__BackingField
<isDefault>k__BackingField
<last>k__BackingField
<first>k__BackingField
IsNullOrWhiteSpace
IWallcatService
_wallcatService
CreateInstance
defaultInstance
EnsureSuccessStatusCode
get_Mode
UpdateMenuCurrentImage
get_image
set_image
WallpaperSourceWebpage
ChannelCreateWebpage
get_Message
HttpResponseMessage
AddRange
OnPowerChange
Invoke
Enable
enable
Enumerable
IDisposable
set_Visible
RuntimeTypeHandle
GetTypeFromHandle
DownloadFile
Tile
DimensionTuple
channelTitle
wallpaperTitle
get_title
set_title
style
get_TwoLetterISOLanguageName
GetTempFileName
get_FullName
partnerName
GetName
AssemblyName
get_name
DateTime
Combine
IAsyncStateMachine
SetStateMachine
stateMachine
ComInterfaceType
ValueType
System.Core
get_Culture
set_Culture
resourceCulture
get_CurrentCulture
ApplicationSettingsBase
WallpaperImageResponse
ChannelResponse
WallpaperResponse
Dispose
get_Date
MidnightUpdate
Create
EditorBrowsableState
<>1__state
Delete
CallSite
DispIdAttribute
STAThreadAttribute
CompilerGeneratedAttribute
GuidAttribute
GeneratedCodeAttribute
DebuggerNonUserCodeAttribute
DebuggableAttribute
EditorBrowsableAttribute
ComVisibleAttribute
AssemblyTitleAttribute
AsyncStateMachineAttribute
InterfaceTypeAttribute
UserScopedSettingAttribute
AssemblyTrademarkAttribute
TargetFrameworkAttribute
DebuggerHiddenAttribute
AssemblyFileVersionAttribute
AssemblyConfigurationAttribute
AssemblyDescriptionAttribute
DefaultMemberAttribute
TypeIdentifierAttribute
CompilationRelaxationsAttribute
CoClassAttribute
AssemblyProductAttribute
AssemblyCopyrightAttribute
AssemblyCompanyAttribute
RuntimeCompatibilityAttribute
get_Value
get_HasValue
SetValue
value
Save
Move
Remove
Wallcat.exe
Deserialize
get_Tag
set_Tag
System.Threading
System.Runtime.Versioning
ToString
System.Drawing
Stretch
out_Path
tempFilePath
GetFolderPath
get_TargetPath
set_TargetPath
fuWinIni
TimerCallback
add_Tick
PathLink
get_Task
Marshal
set_Interval
retryInterval
label
System.ComponentModel
WallpaperChannel
SelectChannel
get_CurrentChannel
set_CurrentChannel
IsCurrentChannel
get_channel
set_channel
Wallcat.Util
user32.dll
IWshShell
Fill
get_sourceUrl
set_sourceUrl
get_url
set_url
uParam
lpvParam
Program
get_Item
set_Item
MenuItem
OperatingSystem
system
Enum
resourceMan
InfiniteTimeSpan
Main
AppDomain
get_CurrentDomain
set_Icon
ToolTipIcon
get_AppIcon
_trayIcon
NotifyIcon
_notifyIcon
GoogleAnalyticsDimension
GetDimension
dimension
get_OSVersion
get_Version
Application
get_Location
IconAnimation
_iconAnimation
_currentIteration
System.Configuration
System.Globalization
System.Web.Script.Serialization
GoogleAnalyticsAction
uAction
op_Subtraction
System.Reflection
MenuItemCollection
DesktopWallpaperPosition
GetPosition
SetPosition
position
get_Exception
add_ThreadException
Application_ThreadException
add_UnhandledException
CurrentDomain_UnhandledException
AggregateException
SetException
SubmitException
get_Description
set_Description
out_Description
exceptionDescription
get_o
set_o
CultureInfo
SystemParametersInfo
Sleep
ShowBalloonTip
Stop
Microsoft.CSharp
System.Net.Http
GoogleAnalyticsSetup
IsEnabledAtStartup
System.Linq
AsyncVoidMethodBuilder
AsyncTaskMethodBuilder
<>t__builder
SpecialFolder
sender
Microsoft.CSharp.RuntimeBinder
CallSiteBinder
get_ResourceManager
get_UniqueIdentifier
set_UniqueIdentifier
PowerModeChangedEventHandler
ThreadExceptionEventHandler
UnhandledExceptionEventHandler
System.CodeDom.Compiler
Timer
_timer
WallpaperPartner
get_partner
set_partner
UpdateWallpaper
IDesktopWallpaper
GetWallpaper
SetWallpaper
get_CurrentWallpaper
set_CurrentWallpaper
wallpaper
CurrentUser
TaskAwaiter
GetAwaiter
Center
JavaScriptSerializer
get_Major
IEnumerator
GetEnumerator
Activator
.ctor
.cctor
System.Diagnostics
GoogleAnalytics
_googleAnalytics
FromSeconds
Wallcat.Services
System.Runtime.InteropServices
System.Runtime.CompilerServices
System.Resources
Wallcat.Resources.resources
DebuggingModes
PowerModes
Wallcat.Properties
EnableVisualStyles
Frames
CSharpBinderFlags
Settings
PowerModeChangedEventArgs
ThreadExceptionEventArgs
UnhandledExceptionEventArgs
args
<>4__this
System.Threading.Tasks
GetChannels
WallpaperUrls
get_MenuItems
System.Windows.Forms
dimensions
System.Web.Extensions
System.Collections
DesktopWallpaperCoclass
get_success
set_success
Process
SystemEvents
Exists
GetMonitorDevicePathAt
Wallcat
Concat
Format
get_ExceptionObject
GetObject
Select
System.Net
wallpaperSet
Target
Wait
appQuit
add_ApplicationExit
OnApplicationExit
get_AppIconAlt
get_Default
SetCompatibleTextRenderingDefault
GetValueOrDefault
FirstOrDefault
get_isDefault
set_isDefault
get_Result
GetResult
SetResult
WebClient
HttpClient
Environment
get_Current
get_Content
FormUrlEncodedContent
HttpContent
SubmitEvent
get_Count
GetMonitorDevicePathCount
retryCount
Start
Convert
get_last
set_last
ApiHost
get_first
set_first
CreateShortcut
IWshShortcut
CreateStartupShortcut
set_Timeout
MoveNext
get_Text
MyCustomApplicationContext
set_ContextMenu
_contextMenu
get_Now
monitorIndex
get_TimeOfDay
ToArray
SetWallpaperLegacy
OpenSubKey
RegistryKey
get_Assembly
GetExecutingAssembly
Apply
IWshRuntimeLibrary
GoogleAnalyticsCategory
category
Retry
Registry
op_Equality
op_Inequality
Empty
WrapNonExceptionThrows
Wallcat
Wallcat for Windows
Paito Anderson
 Copyright 
 Paito Anderson 2017
$737b333b-a79a-4dd3-8ade-fb28eea6bfef
1.0.4.0
.NETFramework,Version=v4.6.1
FrameworkDisplayName
.NET Framework 4.6.1;
6Wallcat.MyCustomApplicationContext+<SelectChannel>d__8
#Wallcat.Util.DownloadFile+<Get>d__0
1Wallcat.Services.WallcatService+<GetChannels>d__2
2Wallcat.Services.WallcatService+<GetWallpaper>d__3
2Wallcat.Services.GoogleAnalytics+<SubmitEvent>d__3
2Wallcat.Services.GoogleAnalytics+<SubmitEvent>d__4
6Wallcat.Services.GoogleAnalytics+<SubmitException>d__5
3System.Resources.Tools.StronglyTypedResourceBuilder
4.0.0.0
KMicrosoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator
15.1.0.0
$F935DC21-1CF0-11D0-ADB9-00C04FD58A0B
$24BE5A30-EDFE-11D2-B933-00104B365C9F
$41904400-BE18-11D3-A28B-00104BD35090
FullName
$F935DC23-1CF0-11D0-ADB9-00C04FD58A0B
ZSystem.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
$B92B56A9-8B55-4E14-9A89-0199BBB6F93B
$C2CF3110-460E-4fc1-B9D0-8A1C0C9CC4BD
lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet
fSystem.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Drawing.Icon
IconData
IconSize
System.Drawing.Size
System.Drawing.Size
width
height
Q$$$
+,,,
{			
QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Drawing.Icon
IconData
IconSize
System.Drawing.Size
System.Drawing.Size
width
height
Q$$$
+,,,
RSDS
C:\Users\PaitoAnderson\Documents\GitHub\WallcatWindows\obj\Release\Wallcat.pdb
_CorExeMain
mscoree.dll
Q$$$
+,,,
{			
<?xml version="1.0" encoding="utf-8"?>
<assembly manifestVersion="1.0" xmlns="urn:schemas-microsoft-com:asm.v1">
  <assemblyIdentity version="1.0.0.0" name="MyApplication.app"/>
  <trustInfo xmlns="urn:schemas-microsoft-com:asm.v2">
    <security>
      <requestedPrivileges xmlns="urn:schemas-microsoft-com:asm.v3">
        <!-- UAC Manifest Options
             If you want to change the Windows User Account Control level replace the 
             requestedExecutionLevel node with one of the following.
        <requestedExecutionLevel  level="asInvoker" uiAccess="false" />
        <requestedExecutionLevel  level="requireAdministrator" uiAccess="false" />
        <requestedExecutionLevel  level="highestAvailable" uiAccess="false" />
            Specifying requestedExecutionLevel element will disable file and registry virtualization. 
            Remove this element if your application requires this virtualization for backwards
            compatibility.
        -->
        <requestedExecutionLevel level="asInvoker" uiAccess="false" />
      </requestedPrivileges>
    </security>
  </trustInfo>
  <compatibility xmlns="urn:schemas-microsoft-com:compatibility.v1">
    <application>
      <!-- A list of the Windows versions that this application has been tested on and is
           is designed to work with. Uncomment the appropriate elements and Windows will 
           automatically selected the most compatible environment. -->
      <!-- Windows Vista -->
      <!--<supportedOS Id="{e2011457-1546-43c5-a5fe-008deee3d3f0}" />-->
      <!-- Windows 7 -->
      <!--<supportedOS Id="{35138b9a-5d96-4fbd-8e2d-a2440225f93a}" />-->
      <!-- Windows 8 -->
      <!--<supportedOS Id="{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}" />-->
      <!-- Windows 8.1 -->
      <!--<supportedOS Id="{1f676c76-80e1-4239-95bb-83d0f6d0da78}" />-->
      <!-- Windows 10 -->
      <supportedOS Id="{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}" />
    </application>
  </compatibility>
  <!-- Indicates that the application is DPI-aware and will not be automatically scaled by Windows at higher
       DPIs. Windows Presentation Foundation (WPF) applications are automatically DPI-aware and do not need 
       to opt in. Windows Forms applications targeting .NET Framework 4.6 that opt into this setting, should 
       also set the 'EnableWindowsFormsHighDpiAutoResizing' setting to 'true' in their app.config. -->
  <application xmlns="urn:schemas-microsoft-com:asm.v3">
    <windowsSettings>
      <dpiAware xmlns="http://schemas.microsoft.com/SMI/2005/WindowsSettings">true</dpiAware>
    </windowsSettings>
  </application>
  <!-- Enable themes for Windows common controls and dialogs (Windows XP and later) -->
  <!--
  <dependency>
    <dependentAssembly>
      <assemblyIdentity
          type="win32"
          name="Microsoft.Windows.Common-Controls"
          version="6.0.0.0"
          processorArchitecture="*"
          publicKeyToken="6595b64144ccf1df"
          language="*"
        />
    </dependentAssembly>
  </dependency>
  -->
</assembly>
